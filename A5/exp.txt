start BOF procedures EOF
BOF BOF
procedures main
main INT WAIN LPAREN dcl COMMA dcl RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
WAIN wain
LPAREN (
dcl type ID
type INT STAR
INT int
STAR *
ID begin
COMMA ,
dcl type ID
type INT
INT int
ID size
RPAREN )
LBRACE {
dcls dcls dcl BECOMES NUM SEMI
dcls dcls dcl BECOMES NULL SEMI
dcls .EMPTY
dcl type ID
type INT STAR
INT int
STAR *
ID copy
BECOMES =
NULL NULL
SEMI ;
dcl type ID
type INT
INT int
ID i
BECOMES =
NUM 0
SEMI ;
statements statements statement
statements statements statement
statements statements statement
statements .EMPTY
statement lvalue BECOMES expr SEMI
lvalue ID
ID copy
BECOMES =
expr term
term factor
factor NEW INT LBRACK expr RBRACK
NEW new
INT int
LBRACK [
expr term
term factor
factor ID
ID size
RBRACK ]
SEMI ;
statement WHILE LPAREN test RPAREN LBRACE statements RBRACE
WHILE while
LPAREN (
test expr LT expr
expr term
term factor
factor ID
ID i
LT <
expr term
term factor
factor ID
ID size
RPAREN )
LBRACE {
statements statements statement
statements statements statement
statements .EMPTY
statement lvalue BECOMES expr SEMI
lvalue STAR factor
STAR *
factor LPAREN expr RPAREN
LPAREN (
expr expr PLUS term
expr term
term factor
factor ID
ID copy
PLUS +
term factor
factor ID
ID i
RPAREN )
BECOMES =
expr term
term factor
factor STAR factor
STAR *
factor LPAREN expr RPAREN
LPAREN (
expr expr PLUS term
expr term
term factor
factor ID
ID begin
PLUS +
term factor
factor ID
ID i
RPAREN )
SEMI ;
statement lvalue BECOMES expr SEMI
lvalue ID
ID i
BECOMES =
expr expr PLUS term
expr term
term factor
factor ID
ID i
PLUS +
term factor
factor NUM
NUM 1
SEMI ;
RBRACE }
statement DELETE LBRACK RBRACK expr SEMI
DELETE delete
LBRACK [
RBRACK ]
expr term
term factor
factor ID
ID copy
SEMI ;
RETURN return
expr term
term factor
factor NUM
NUM 0
SEMI ;
RBRACE }
EOF EOF
